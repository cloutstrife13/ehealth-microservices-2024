"""Module description goes here."""

## https://bazel.build/external/migration

module(
    name = "ehealth-microservices-2024",
    repo_name = "com_github_cloutstrife13_ehealth_microservices_2024",
)

# Go module setup
bazel_dep(name = "rules_go", version = "0.48.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.36.0", repo_name = "bazel_gazelle")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.4")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# All *direct* Go dependencies of the module have to be listed explicitly.
use_repo(
    go_deps,
    "com_github_google_uuid",
    "com_github_kataras_iris_v12",
    "com_github_onsi_ginkgo_v2",
    "com_github_onsi_gomega",
    "io_gorm_driver_postgres", 
    "io_gorm_gorm",
    "com_github_testcontainers_testcontainers_go",
    "com_github_testcontainers_testcontainers_go_modules_postgres",
)

bazel_dep(name = "toolchains_musl", version = "0.1.16")
toolchains_musl = use_extension("@toolchains_musl//:toolchains_musl.bzl", "toolchains_musl")
use_repo(toolchains_musl, "musl_toolchains_hub")

register_toolchains("@musl_toolchains_hub//:all")

bazel_dep(name = "rules_pkg", version = "0.10.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.7.8")
bazel_dep(name = "rules_oci", version = "1.7.6")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Declare external images you need to pull, for example: 
oci.pull(
    name = "distroless_base",
    # 'latest' is not reproducible, but it's convenient.
    # During the build we print a WARNING message that includes recommended 'digest' and 'platforms'
    # values which you can use here in place of 'tag' to pin for reproducibility.
    digest = "sha256:786007f631d22e8a1a5084c5b177352d9dcac24b1e8c815187750f70b24a9fc6",
    image = "gcr.io/distroless/base",
    platforms = ["linux/amd64", "linux/arm64/v8", "linux/arm/v7", "linux/s390x", "linux/ppc64le"],
)

# For each oci.pull call, repeat the "name" here to expose them as dependencies.
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8", "distroless_base_linux_arm_v7", "distroless_base_linux_ppc64le", "distroless_base_linux_s390x")