load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "patient-service_lib",
    srcs = ["main.go"],
    importpath = "github.com/cloutstrife13/ehealth-microservices-2024/services/patient-service",
    visibility = ["//visibility:private"],
    deps = [
        "//services/patient-service/patients",
        "@com_github_kataras_iris_v12//:iris",
    ],
)

go_binary(
    name = "patient-service",
    embed = [":patient-service_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

pkg_tar(
    name = "tar",
    srcs = [":patient-service"],
)

load("@rules_oci//oci:defs.bzl", "oci_image")

oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/patient-service"],
    tars = [":tar"],
)

load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")

platform_transition_filegroup(
    name = "transitioned_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": "@io_bazel_rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@io_bazel_rules_go//go/toolchain:linux_amd64",
    }),
)

load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")

oci_tarball(
    name = "tarball",
    # Use the image built for the exec platform rather than the target platform
    image = ":image",
    repo_tags = ["gcr.io/example:latest"],
)
